{"version":3,"sources":["store/images/types.ts","store/images/reducer.ts","services/axios.ts","services/unsplash.ts","store/images/actions.ts","store/images/index.ts","store/auth/types.ts","store/auth/reducer.ts","services/auth.ts","store/auth/actions.ts","store/auth/index.ts","configs/base.ts","configs/index.ts","configs/dev.ts","configs/prod.ts","store/index.ts","components/field/Field.tsx","components/grid/GridItem.tsx","components/button/Button.tsx","components/grid/Grid.tsx","containers/Grid.ts","components/searchForm/SearchForm.tsx","containers/Nav.ts","components/nav/Nav.tsx","components/auth/Auth.tsx","containers/Auth.ts","components/nav/NavItem.tsx","components/signInForm/SignInForm.tsx","containers/SignIn.ts","components/signIn/SignIn.tsx","routes.tsx","App.tsx","index.tsx"],"names":["IMAGES_ACTION_TYPES","INITIAL_STATE","items","totalPages","total","isLoading","currentPage","reducer","state","arguments","length","undefined","action","type","LOADING","SEARCH_SUCCEED","Object","objectSpread","payload","getImages","images","getIsLoading","getTotalItems","getTotalPages","getCurrentPage","request","axios","create","baseURL","configs","baseUrl","headers","Authorization","concat","clientId","searchItems","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","axiosConfig","response","_response$data","wrap","_context","prev","next","params","query","value","page","get","sent","data","total_pages","results","abrupt","stop","_x","apply","this","fetchPhotos","_ref2","_callee2","_context2","loadItems","_ref3","_callee3","_response$data2","_context3","_x2","loadingStart","searchSucceed","searchError","SEARCH_ERROR","getItems","dispatch","getPhotos","pagImages","_x3","__webpack_require__","d","__webpack_exports__","actions_getItems","actions_getPhotos","actions_pagImages","AUTH_ACTION_TYPES","isAuthenticated","token","SET_TOKEN","access_token","auth","fetchToken","code","requestConfig","client_id","client_secret","clientSecret","redirect_uri","appDomain","redirectUri","grant_type","post","setToken","responseData","actions_setToken","base","response_type","scope","config","redux__WEBPACK_IMPORTED_MODULE_0__","_images__WEBPACK_IMPORTED_MODULE_1__","_auth__WEBPACK_IMPORTED_MODULE_2__","combineReducers","InputTypes","GridItem","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","spans","imageRef","React","createRef","setSpans","imageHeight","current","clientHeight","Math","ceil","setState","inherits","createClass","key","addEventListener","removeEventListener","_this$props","props","url","className","react_default","createElement","classnames","style","gridRowEnd","src","alt","ref","PureComponent","Button","children","objectWithoutProperties","assign","Grid","Fragment","Helmet_default","title","map","item","description","urls","likes","id","GridItem_GridItem","small","Button_Button","onClick","GridContainer","connect","Field","restProps","console","log","SearchForm","_React$Component","onSubmit","e","preventDefault","changeHandler","currentTarget","classNames","Field_Field","TEXT","placeholder","onChange","Component","NavContainer","onSearch","SearchForm_SearchForm","Auth","search","location","indexOf","slice","nextProps","nextContext","history","push","react","href","AuthContainer","NavItem","path","Link","to","SignInForm","esm","field","SignInContainer","SignInForm_SignInForm","routes","exact","match","productId","App","NavItem_NavItem","Route","render","routeProps","process","ENV","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","compose","applyMiddleware","reduxThunk","ReactDOM","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1fcc3d9.chunk.js","sourcesContent":["import { Image } from '../../types/imagesApi';\nimport { IAction } from '../../types/action';\n\nexport enum IMAGES_ACTION_TYPES {\n  SEARCH_SUCCEED = '@images/search_succeed',\n  LOADING = '@images/loading',\n  SEARCH_ERROR = '@images/search_error',\n  FETCH_PHOTOS= '@images/fetch_photos'\n}\n\nexport type ImagesAction = IAction<IMAGES_ACTION_TYPES, {[key: string]: any}>;\n\nexport interface ImagesState {\n  searchValue?: string;\n  items: Array<Image>;\n  totalPages: number;\n  total: number;\n  isLoading: boolean;\n  currentPage: number;\n}\n","import { IMAGES_ACTION_TYPES, ImagesAction, ImagesState } from './types';\nimport { AppState } from '../types';\nimport { Image } from '../../types/imagesApi';\n\nconst INITIAL_STATE = {\n  items: [],\n  totalPages: 0,\n  total: 0,\n  isLoading: false,\n  currentPage: 1\n};\n\nexport default (state: ImagesState = INITIAL_STATE, action: ImagesAction) => {\n  switch(action.type) {\n    case IMAGES_ACTION_TYPES.LOADING:\n      return { ...state, ...action.payload};\n    case IMAGES_ACTION_TYPES.SEARCH_SUCCEED:\n      return { ...state, ...action.payload};\n    default:\n      return state;\n  }\n}\n// SELECTORS\nexport const getImages = (state: AppState): Array<Image> => {\n  return state.images.items;\n};\n\nexport const getIsLoading = (state: AppState): boolean => state.images.isLoading;\n\nexport const getTotalItems = (state: AppState) => {\n  return state.images.total;\n};\n\nexport const getTotalPages = (state: AppState) => {\n  return state.images.totalPages;\n};\n\nexport const getCurrentPage = (state: AppState) => {\n  return state.images.currentPage;\n};\n\n","import axios from 'axios';\nimport configs from '../configs';\n\nconst request = axios.create({\n  baseURL: configs.baseUrl,\n  headers: {\n    'Authorization': `Client-ID ${configs.clientId}`\n  }\n});\n\nexport default request\n","import { Image, SearchResponse } from '../types/imagesApi';\nimport axios from './axios';\n\n\nexport interface SearchItemsResponse {\n  totalPages: number;\n  total: number;\n  items: Array<Image>\n}\n\n// search\nexport const searchItems = async (payload: {value: string, page: number}): Promise<SearchItemsResponse>  => {\n  const axiosConfig = {\n    params: {\n      query: payload.value,\n      page: payload.page\n    }\n  };\n  const  apiUrl = '/search/photos';\n  const response = await axios.get<SearchResponse>(apiUrl, axiosConfig);\n  const { total_pages: totalPages, total, results: items } = response.data;\n  return { totalPages, total, items }\n};\n\n//booting\nexport const fetchPhotos = async (): Promise<any>  => {\n  const axiosConfig = {\n    params: {\n      page: 1\n    }\n  };\n  const apiUrl = '/photos';\n  const response = await axios.get<any>(apiUrl, axiosConfig);\n  const { results: items } = response.data;\n  return { totalPages: 0, total: 0, items: response.data }\n};\n\n// pagination\nexport const loadItems = async (payload: {value: string, page: number}): Promise<SearchItemsResponse>  => {\n  const currentPage = payload.page + 1;\n  const axiosConfig = {\n    params: {\n      query: payload.value,\n      page: currentPage\n    }\n  };\n  const  apiUrl = '/search/photos';\n  const response = await axios.get<SearchResponse>(apiUrl, axiosConfig);\n  const { total_pages: totalPages, total, results: items } = response.data;\n  return { totalPages, total, items }\n};\n","import { IMAGES_ACTION_TYPES, ImagesAction } from './types';\nimport { Dispatch } from 'redux';\nimport {fetchPhotos, searchItems, loadItems} from '../../services';\n\nconst loadingStart = () => (\n  {\n    type: IMAGES_ACTION_TYPES.LOADING,\n    payload: { isLoading: true }\n  }\n);\n\nconst searchSucceed = (payload: any) => ({\n  type: IMAGES_ACTION_TYPES.SEARCH_SUCCEED,\n  payload\n});\n\nconst searchError = () => (\n  {\n    type: IMAGES_ACTION_TYPES.SEARCH_ERROR,\n  }\n);\n// Action creator\n// sign in, nav\nexport const getItems = (payload: {value: string, page: number}): any => {\n  return async (dispatch: Dispatch<ImagesAction>) => {\n    dispatch(loadingStart());\n\n    const response = await searchItems(payload);\n\n    if (response) {\n      dispatch(searchSucceed({...response, isLoading: false}));\n    } else {\n      dispatch(searchError());\n    }\n  }\n};\n\n// booting images\nexport const getPhotos= (): any => async (dispatch: Dispatch<ImagesAction>) =>{\n  dispatch(loadingStart());\n  const response = await fetchPhotos();\n\n  if (response) {\n    dispatch(searchSucceed({...response, isLoading: false}));\n  } else {\n    dispatch(searchError());\n  }\n};\n\n// pagination\nexport const pagImages = (payload: {value: string, page: number}): any => {\n  return async (dispatch: Dispatch<ImagesAction>) => {\n    dispatch(loadingStart());\n  const response = await loadItems(payload);\n\n  if (response) {\n    dispatch(searchSucceed({...response, isLoading: false}));\n  } else {\n    dispatch(searchError());\n  }\n}};\n","export { default } from './reducer'\nexport *  from './actions'\nexport *  from './reducer'\n","import { IAction } from '../../types/action';\n\nexport interface AuthState {\n  isAuthenticated: boolean,\n  token: string;\n}\n\nexport enum AUTH_ACTION_TYPES {\n  SET_TOKEN = '@auth/set_token',\n}\n\nexport type AuthAction = IAction<AUTH_ACTION_TYPES, {[key: string]: any}>;\n","import { AUTH_ACTION_TYPES, AuthAction, AuthState } from './types';\nimport { AppState } from '../types';\n\nconst INITIAL_STATE = {\n  isAuthenticated: false,\n  token: ''\n}\n\nexport default (state: AuthState = INITIAL_STATE, action: AuthAction) => {\n  switch(action.type) {\n    case AUTH_ACTION_TYPES.SET_TOKEN:\n      const isAuthenticated = true;\n      const token = action.payload!.access_token;\n      return {...state, isAuthenticated, token };\n    default:\n      return state;\n  }\n}\n\nexport const isAuthenticated = (state: AppState) => (state.auth.isAuthenticated);\n","import axios from 'axios';\nimport configs from '../configs';\n\n// https://unsplash.com/oauth/authorize?client_id=42f00e5ccf3bce6f62206323d3163d3b46ba5674d3196d610db0d2a08434ffd0&redirect_uri=http://localhost:3000/auth&response_type=code&scope=public\n\nexport interface FetchTokenResponse {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  scope: string\n  created_at: number\n}\n\n\nexport const fetchAuthCode = () => {\n  const requestConfig = {\n    params: {\n      client_id: configs.clientId,\n      redirect_uri: configs.appDomain + configs.redirectUri,\n      response_type: 'code',\n      scope: 'public+read_user'\n    }\n  };\n\n  axios.get('https://unsplash.com/oauth/authorize', requestConfig);\n};\n\nexport const fetchToken = async (code: string): Promise<FetchTokenResponse> => {\n  const requestConfig = {\n    params: {\n      client_id: configs.clientId,\n      client_secret: configs.clientSecret,\n      redirect_uri: configs.appDomain + configs.redirectUri,\n      code,\n      grant_type: 'authorization_code'\n    }\n  };\n\n  const request = axios.create(requestConfig);\n\n  const response = await request.post('https://unsplash.com/oauth/token');\n  return response.data;\n};\n","import { Dispatch } from 'redux';\nimport { fetchToken, FetchTokenResponse } from '../../services/auth';\nimport { AUTH_ACTION_TYPES, AuthAction } from './types';\n\nconst dispatchSetToken = (payload: FetchTokenResponse): AuthAction => (\n  {\n    type: AUTH_ACTION_TYPES.SET_TOKEN,\n    payload\n  }\n);\n\nexport const setToken = (code: string): any => async (dispatch: Dispatch<AuthAction>) => {\n  const responseData = await fetchToken(code);\n\n  dispatch(dispatchSetToken(responseData));\n};\n","export {default} from './reducer';\nexport * from './reducer';\nexport * from './actions';\n","export default {\n    baseUrl: 'https://api.unsplash.com',\n    clientId: '9a6b0e49e1eff14b3a5477975544ed60f3197105c6d6e2c50cb9a300fa712a1d',\n    clientSecret: '5a1243845b45bb9357ae8020206d489169fd55f3be660cbde8655df87a7db651',\n    response_type: 'code',\n    scope: 'public+read_user',\n    redirectUri: '/auth'\n}","import dev from './dev';\nimport prod from './prod';\nlet config = process.env.NODE_ENV === 'development' ? dev : prod;\n\nexport default config;","import base from './base';\n\nexport default {\n    ...base,\n    appDomain: 'http://localhost:3000'\n}","import base from './base';\n\nexport default {\n  ...base,\n  appDomain: 'https://csr-react-unsplash-clone.herokuapp.com'\n}","import { combineReducers, Reducer } from 'redux';\nimport images from './images';\nimport auth from './auth';\nimport { AppState } from './types';\n\nconst reducer: Reducer<AppState> = combineReducers<AppState>({\n  images,\n  auth\n});\n\nexport default reducer;\nexport * from './types';\n","import React, { InputHTMLAttributes } from 'react';\n\nimport './Field.scss';\n\nexport enum InputTypes {\n    TEXT = 'text',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    PHONE = 'phone'\n}\n\ninterface IProps extends InputHTMLAttributes<HTMLInputElement> {\n    type: InputTypes;\n}\n\nexport class Field extends React.PureComponent<IProps> {\n    render() {\n        const { type, ...restProps } = this.props;\n        console.log(restProps);\n        return <div className={'field'}>\n            <input\n                type={type}\n                {...restProps}\n                className={'field__native-input'}/>\n        </div>\n    }\n}\n","import React, { RefObject } from 'react';\n\nimport classnames from 'classnames';\n\nimport './GridItem.scss';\n\ninterface IGridItemProps {\n  id: string;\n  url: string;\n  description: string;\n  likes: number;\n  link?: string;\n  className?: string,\n}\n\n\nexport class GridItem extends React.PureComponent<IGridItemProps> {\n  public state = {\n    spans: 0\n  };\n\n  private imageRef: RefObject<HTMLImageElement> = React.createRef();\n\n  componentDidMount(): void {\n    this.imageRef.current!.addEventListener('load', this.setSpans);\n  }\n\n  componentWillUnmount(): void {\n    this.imageRef.current!.removeEventListener('load', this.setSpans);\n  }\n\n  render() {\n    const {url, className} = this.props;\n    const {spans} = this.state;\n\n    return <div className={classnames('grid-item', className)} style={{gridRowEnd: `span ${spans}`}}>\n      <img src={url} alt='' ref={this.imageRef}/>\n    </div>;\n  }\n\n  private setSpans = () => {\n    const imageHeight = this.imageRef.current!.clientHeight;\n    const rawHeight = 10;// Looking to Grid.scss\n    const spans = Math.ceil(imageHeight / rawHeight);\n    this.setState(state => ({...state, spans}));\n  }\n}\n\n","import React, { ButtonHTMLAttributes } from 'react';\nimport classnames from 'classnames';\n\nimport './Button.scss';\n\ninterface IProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string;\n}\n\nexport const Button: React.FunctionComponent<IProps> = ({ children, className, ...props }) => {\n  return <button className={classnames('btn ', className)} {...props}>{ children }</button>\n};\n","import React from 'react';\nimport { Image } from '../../types/imagesApi';\nimport { GridItem } from './GridItem';\nimport './Grid.scss';\nimport Helmet from \"react-helmet\";\nimport {Button} from \"../button\";\n\ninterface Props {\n  images: Array<Image>;\n  isLoading: boolean;\n  title?: string;\n  total: number;\n  totalPages: number;\n  currentPage: number;\n  getPhotos(): void;\n  pagImages(): void;\n}\n\nexport class Grid extends React.PureComponent<Props> {\n  componentDidMount(): void {\n    this.props.getPhotos();\n    this.props.pagImages()\n  }\n\n  render() {\n    const { images, isLoading } = this.props;\n    if (isLoading) {\n      return <h2>loading...</h2>\n    }\n    return <>\n        <Helmet>\n          <title>{this.props.title}</title>\n        </Helmet>\n        <div className={'grid'}>\n          <div className='grid__content'>\n            {\n              images.map(item => {\n                const {description, urls, likes, id} = item;\n                return <GridItem\n                    className={'grid__item'}\n                    id={id}\n                    description={description}\n                    url={urls.small}\n                    likes={likes}/>;\n              })\n            }\n          </div>\n          <div>Found items: { this.props.total }</div>\n          <div>Total pages: { this.props.totalPages }</div>\n          <div>Current page: { this.props.currentPage }</div>\n          <Button className={'btn'} onClick={this.props.pagImages}>Show next page</Button>\n        </div>\n      </>\n  }\n}\n","import { connect } from 'react-redux';\n\nimport { getImages, getIsLoading, getPhotos, getTotalItems, getTotalPages, getCurrentPage, pagImages } from '../store/images';\nimport { AppState } from '../store';\nimport { Grid } from '../components/grid';\nimport { Image } from '../types/imagesApi';\n\nexport interface IGridOwnProps {}\n\nexport interface IGridStateProps {\n  images: Array<Image>;\n  isLoading: boolean;\n  total: number;\n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface IGridDispatchProps {}\n\ntype Props = IGridStateProps & IGridDispatchProps & IGridOwnProps\n\nconst dispatchToProps = (dispatch: any) => {\n  return {\n    getPhotos: () => dispatch(getPhotos()),\n    pagImages: (value: string) => dispatch(pagImages({value, page: 1}))\n  }\n};\n\nconst mapStateToProps = (state: AppState): Props  => {\n  return {\n    images: getImages(state),\n    isLoading: getIsLoading(state),\n    total: getTotalItems(state),\n    totalPages: getTotalPages(state),\n    currentPage: getCurrentPage(state),\n  };\n};\n\nconst GridContainer = connect<IGridStateProps, IGridDispatchProps, IGridOwnProps>(mapStateToProps as any, dispatchToProps as any)(Grid);\n\nexport { GridContainer as Grid };\n","import React, { SyntheticEvent } from 'react';\n\nimport { Field, InputTypes } from '../field';\nimport classnames from 'classnames';\n\nimport './SearchForm.scss';\n\ninterface IProps {\n    onSubmit: (value: string) => void;\n    className: string;\n}\n\ninterface IState {\n    value: string;\n}\n\nexport class SearchForm extends React.Component<IProps, IState>{\n    public state = {\n        value: ''\n    };\n\n    private onSubmit = (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.value);\n    };\n\n    private changeHandler = (e: SyntheticEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value;\n        this.setState(state => ({...state, value}));\n    };\n\n    render() {\n        const { value } = this.state;\n        const classNames = classnames('search-form', this.props.className);\n\n        return <form onSubmit={this.onSubmit} className={classNames}>\n            <Field\n                type={InputTypes.TEXT}\n                value={value}\n                placeholder={'Search'}\n                onChange={this.changeHandler} />\n        </form>;\n    }\n}\n","import Redux, { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Nav } from '../components/nav/Nav';\nimport { getItems } from '../store/images';\nimport { ImagesAction } from '../store/images/types';\n\ninterface IDispatchProps {\n  onSearch: (value: string) => Dispatch<ImagesAction>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ImagesAction>) => {\n  return {\n    onSearch: (value: string) => dispatch(getItems({value, page: 1}))\n  }\n};\n\nconst NavContainer = connect<null, IDispatchProps, null>(null, mapDispatchToProps)(Nav);\n\nexport { NavContainer as Nav};\n","import { SearchForm } from '../searchForm';\nimport React, { ReactNode } from 'react';\n\nimport './Nav.scss';\n\ninterface IProps {\n  onSearch: (value: string) => void,\n}\n\nexport const Nav: React.FunctionComponent<IProps> = ({ onSearch, children }) => {\n  return <nav className={'page-nav'}>\n    <div className='page-nav__container'>\n      <SearchForm className={'page-nav__search-form'} onSubmit={onSearch}/>\n      <ul className={'page-nav__menu'}>\n        { children }\n      </ul>\n    </div>\n  </nav>\n};\n\n\n","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport configs from '../../configs';\nimport Helmet from \"react-helmet\";\n\nexport interface AuthProps extends RouteChildrenProps {\n  setToken(code: string): void;\n  isAuthenticated?: boolean;\n  title?: string;\n}\n\nexport class Auth extends React.PureComponent<AuthProps, any> {\n  componentDidMount(): void {\n    const { search } = this.props.location;\n    if (search.indexOf('code=') !== -1) {\n      const code = search.slice(search.indexOf('=') + 1);\n      this.props.setToken(code);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<AuthProps>, nextContext: any): void {\n    if (nextProps.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return <>\n      <Helmet>\n        <title>{this.props.title}</title>\n      </Helmet>\n      <div>\n        <a href={`https://unsplash.com/oauth/authorize?client_id=${configs.clientId}&redirect_uri=${configs.appDomain + configs.redirectUri}&response_type=${configs.response_type}&scope=${configs.scope}`}>authorize</a>\n      </div>\n    </>\n  }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { AuthAction } from '../store/auth/types';\nimport { isAuthenticated, setToken } from '../store/auth';\nimport { Auth } from '../components/auth';\nimport { AppState } from '../store';\nimport { RouteChildrenProps } from 'react-router';\n\ninterface IDispatchProps {\n  setToken: (code: string) => Dispatch<AuthAction>;\n}\n\ninterface IStateProps {\n  isAuthenticated: boolean\n}\n\ninterface OwnProps extends RouteChildrenProps {}\n\nconst mapStateToProps = (state: AppState) => (\n  {\n    isAuthenticated: isAuthenticated(state)\n  }\n);\n\n\nconst mapDispatchToProps = (dispatch: Dispatch<AuthAction>) => (\n  {\n    setToken: (code: string) => dispatch(setToken(code))\n  }\n);\n\nconst AuthContainer = connect<IStateProps, IDispatchProps, OwnProps>(mapStateToProps as any, mapDispatchToProps)(Auth);\n\nexport { AuthContainer as Auth };\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\ninterface IProps {\n  path: string;\n  title: string;\n}\n\nexport const NavItem: React.FunctionComponent<IProps> = ({path, title}) => {\n  return  <li className={'page-nav__item'}>\n    <Link to={path}><span>{title}</span></Link>\n  </li>\n}\n","import * as React from 'react';\nimport { Form, Text } from 'informed';\n\ninterface IProps {\n  className?: string\n}\n\nexport class SignInForm extends React.Component<IProps> {\n  render() {\n    return <Form >\n      <Text field={'email'}/>\n      <Text field={'password'}/>\n      <button type={'submit'}>Submit</button>\n    </Form>\n  }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { getItems } from '../store/images';\nimport { ImagesAction } from '../store/images/types';\nimport { SignIn } from '../components/signIn/SignIn';\n\ninterface IDispatchProps {\n  onSubmit: (value: string) => Dispatch<ImagesAction>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ImagesAction>) => {\n  return {\n    onSubmit: (value: string) => dispatch(getItems({value, page: 1}))\n  }\n};\n\nconst SignInContainer = connect<null, IDispatchProps, null>(null, mapDispatchToProps)(SignIn);\n\nexport { SignInContainer as SignIn};\n","import * as React from 'react';\nimport { SignInForm } from '../signInForm/SignInForm';\n\ninterface IProps {\n  onSubmit: (v: string) => void\n}\n\nexport const SignIn: React.FunctionComponent<IProps> = () => {\n  return <div className={'sign-in'}>\n    <SignInForm className={'sign-in__form'}/>\n  </div>\n}\n","import { Auth, Grid } from './containers';\nimport React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport { SignIn } from './containers/SignIn';\n\nexport const routes = [\n  {\n    title: 'Home',\n    path: '/',\n    exact: true,\n    props: {\n      title: 'Home page of our cool site'\n    },\n    Component: Grid\n  },\n  {\n    title: 'Auth',\n    path: '/auth',\n    props: {\n      title: 'Auth'\n    },\n    Component: (props: RouteChildrenProps) => {\n      return <Auth {...props}/>\n    }\n  },\n  {\n    title: 'Product',\n    path: '/products/:productId',\n    exact: true,\n    props: {\n      title: 'Test'\n    },\n    Component: (props: RouteChildrenProps<{productId: string}>) => {\n      console.log(props.match);\n      return <div>Product: {props.match!.params.productId}</div>\n    }\n  },\n  {\n    title: 'About',\n    path: '/about',\n    Component: () => <h1>Hello from about page</h1>\n  },\n  {\n    title: 'Sign In',\n    path: '/sign-in',\n    Component: () => <SignIn />\n  }\n];\n","import React from 'react';\n\nimport { Nav } from './containers';\nimport './App.scss';\nimport { Route } from 'react-router';\nimport { NavItem } from './components/nav';\nimport { routes } from './routes';\n\nexport class App extends React.Component<{}, {}> {\n   public render() {\n    return <div className={'page-container'}>\n      <Nav>\n        {\n          routes.map(({path, title}) => (\n            <NavItem path={path} title={title}/>\n          ))\n        }\n      </Nav>\n      {\n        routes.map(({path, exact, Component, props}) => (\n          <Route\n            path={path}\n            exact={exact}\n            render={(routeProps) => {\n              console.log(routeProps);\n              // @ts-ignore\n              return <Component {...props} {...routeProps}/>;\n            }}\n          />\n        ))\n      }\n    </div>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store';\nimport { App } from './App';\n\nconsole.log(process.env, process.env.ENV);\n\nimport './index.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(reduxThunk),\n  composeEnhancers()\n));\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}