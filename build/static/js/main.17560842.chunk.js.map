{"version":3,"sources":["configs/index.ts","store/images/types.ts","store/images/reducer.ts","services/axios.ts","services/unsplash.ts","store/images/actions.ts","store/images/index.ts","store/auth/types.ts","store/auth/reducer.ts","services/auth.ts","store/auth/actions.ts","store/auth/index.ts","store/index.ts","components/field/Field.tsx","components/grid/GridItem.tsx","components/grid/Grid.tsx","containers/Grid.ts","components/searchForm/SerchForm.tsx","containers/Nav.ts","components/nav/Nav.tsx","components/auth/Auth.tsx","containers/Auth.ts","components/nav/NavItem.tsx","components/signInForm/SignInForm.tsx","containers/SignIn.ts","components/signIn/SignIn.tsx","routes.tsx","App.tsx","index.tsx"],"names":["__webpack_exports__","baseUrl","clientId","clientSecret","redirectUri","response_type","scope","IMAGES_ACTION_TYPES","INITIAL_STATE","items","totalPages","total","isLoading","reducer","state","arguments","length","undefined","action","type","LOADING","SEARCH_SUCCEED","Object","objectSpread","payload","getImages","images","getIsLoading","request","axios","create","baseURL","configs","headers","Authorization","concat","searchItems","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","axiosConfig","response","_response$data","wrap","_context","prev","next","params","query","value","page","get","sent","data","total_pages","results","abrupt","stop","_x","apply","this","searchSucceed","getItems","dispatch","fetchItems","SEARCH_ERROR","__webpack_require__","d","actions_getItems","AUTH_ACTION_TYPES","isAuthenticated","token","SET_TOKEN","access_token","auth","fetchToken","code","requestConfig","client_id","client_secret","redirect_uri","grant_type","post","setToken","responseData","actions_setToken","redux__WEBPACK_IMPORTED_MODULE_0__","_images__WEBPACK_IMPORTED_MODULE_1__","_auth__WEBPACK_IMPORTED_MODULE_2__","combineReducers","InputTypes","GridItem","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","spans","imageRef","React","createRef","setSpans","imageHeight","current","clientHeight","Math","ceil","setState","inherits","createClass","key","addEventListener","removeEventListener","_this$props","props","url","className","react_default","createElement","classnames","style","gridRowEnd","src","alt","ref","PureComponent","Grid","title","map","item","description","urls","likes","id","GridItem_GridItem","small","GridContainer","connect","Field","restProps","objectWithoutProperties","console","log","assign","SearchForm","_React$Component","onSubmit","e","preventDefault","changeHandler","currentTarget","classNames","Field_Field","TEXT","placeholder","onChange","Component","NavContainer","onSearch","children","SerchForm_SearchForm","Auth","search","location","indexOf","slice","nextProps","nextContext","history","push","react","href","AuthContainer","NavItem","path","Link","to","SignInForm","esm","field","SignInContainer","SignInForm_SignInForm","routes","exact","match","productId","App","NavItem_NavItem","_ref2","Route","render","routeProps","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","compose","applyMiddleware","reduxThunk","ReactDOM","es","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.17560842.chunk.js","sourcesContent":["export default {\n  baseUrl: 'https://api.unsplash.com',\n  clientId: '588745fe0494eda1c54354b97d7885c5f94a97a359ce835605acf2df6163ba8c',\n  clientSecret: 'a61e2010de217db18110423b0e2defbe52175362520ec217a061226fea832ea0',\n  redirectUri: 'http://localhost:3000/auth',\n  response_type: 'code',\n  scope: 'public+read_user'\n}\n","import { Image } from '../../types/imagesApi';\nimport { IAction } from '../../types/action';\n\nexport enum IMAGES_ACTION_TYPES {\n  SEARCH_SUCCEED = '@images/search_succeed',\n  LOADING = '@images/loading',\n  SEARCH_ERROR = '@images/search_error'\n}\n\nexport type ImagesAction = IAction<IMAGES_ACTION_TYPES, {[key: string]: any}>;\n\nexport interface ImagesState {\n  searchValue?: string;\n  items: Array<Image>;\n  totalPages: number;\n  total: number;\n  isLoading: boolean\n}\n","import { IMAGES_ACTION_TYPES, ImagesAction, ImagesState } from './types';\nimport { AppState } from '../types';\nimport { Image } from '../../types/imagesApi';\n\nconst INITIAL_STATE = {\n  items: [],\n  totalPages: 0,\n  total: 0,\n  isLoading: false\n};\n\nexport default (state: ImagesState = INITIAL_STATE, action: ImagesAction) => {\n  switch(action.type) {\n    case IMAGES_ACTION_TYPES.LOADING:\n      return { ...state, ...action.payload};\n    case IMAGES_ACTION_TYPES.SEARCH_SUCCEED:\n      return { ...state, ...action.payload};\n    default:\n      return state;\n  }\n}\n// SELECTORS\nexport const getImages = (state: AppState): Array<Image> => {\n  return state.images.items;\n};\n\nexport const getIsLoading = (state: AppState): boolean => state.images.isLoading;\n\nexport const getTotalItems = (state: AppState) => {\n  return state.images.total;\n};\n\nexport const getTotalPages = (state: AppState) => {\n  return state.images.totalPages;\n};\n\n","import axios from 'axios';\nimport configs from '../configs';\n\nconst request = axios.create({\n  baseURL: configs.baseUrl,\n  headers: {\n    'Authorization': `Client-ID ${configs.clientId}`\n  }\n});\n\nexport default request\n","import { Image, SearchResponse } from '../types/imagesApi';\nimport axios from './axios';\n\n\nexport interface SearchItemsResponse {\n  totalPages: number;\n  total: number;\n  items: Array<Image>\n}\n\nexport const searchItems = async (payload: {value: string, page: number}): Promise<SearchItemsResponse>  => {\n  const axiosConfig = {\n    params: {\n      query: payload.value,\n      page: payload.page\n    }\n  };\n  const  apiUrl = '/search/photos';\n  const response = await axios.get<SearchResponse>(apiUrl, axiosConfig);\n  const { total_pages: totalPages, total, results: items } = response.data;\n  return { totalPages, total, items }\n};\n","import { IMAGES_ACTION_TYPES, ImagesAction } from './types';\nimport { Dispatch } from 'redux';\nimport { searchItems as fetchItems } from '../../services/unsplash';\n\nconst loadingStart = () => (\n  {\n    type: IMAGES_ACTION_TYPES.LOADING,\n    payload: { isLoading: true }\n  }\n)\n\nconst searchSucceed = (payload: any) => ({\n  type: IMAGES_ACTION_TYPES.SEARCH_SUCCEED,\n  payload\n});\n\nconst searchError = () => (\n  {\n    type: IMAGES_ACTION_TYPES.SEARCH_ERROR,\n  }\n);\n// Action creator\nexport const getItems = (payload: {value: string, page: number}): any => {\n  return async (dispatch: Dispatch<ImagesAction>) => {\n    dispatch(loadingStart());\n\n    const response = await fetchItems(payload);\n\n    if (response) {\n      dispatch(searchSucceed({...response, isLoading: false}));\n    } else {\n      dispatch(searchError());\n    }\n  }\n};\n","export { default } from './reducer'\nexport *  from './actions'\nexport *  from './reducer'\n","import { IAction } from '../../types/action';\n\nexport interface AuthState {\n  isAuthenticated: boolean,\n  token: string;\n}\n\nexport enum AUTH_ACTION_TYPES {\n  SET_TOKEN = '@auth/set_token',\n}\n\nexport type AuthAction = IAction<AUTH_ACTION_TYPES, {[key: string]: any}>;\n","import { AUTH_ACTION_TYPES, AuthAction, AuthState } from './types';\nimport { AppState } from '../types';\n\nconst INITIAL_STATE = {\n  isAuthenticated: false,\n  token: ''\n}\n\nexport default (state: AuthState = INITIAL_STATE, action: AuthAction) => {\n  switch(action.type) {\n    case AUTH_ACTION_TYPES.SET_TOKEN:\n      const isAuthenticated = true;\n      const token = action.payload!.access_token;\n      return {...state, isAuthenticated, token };\n    default:\n      return state;\n  }\n}\n\nexport const isAuthenticated = (state: AppState) => (state.auth.isAuthenticated);\n","import axios from 'axios';\nimport configs from '../configs';\n\n// https://unsplash.com/oauth/authorize?client_id=42f00e5ccf3bce6f62206323d3163d3b46ba5674d3196d610db0d2a08434ffd0&redirect_uri=http://localhost:3000/auth&response_type=code&scope=public\n\nexport interface FetchTokenResponse {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  scope: string\n  created_at: number\n}\n\n\nexport const fetchAuthCode = () => {\n  const requestConfig = {\n    params: {\n      client_id: configs.clientId,\n      redirect_uri: 'http://localhost:3000/auth',\n      response_type: 'code',\n      scope: 'public+read_user'\n    }\n  };\n\n  axios.get('https://unsplash.com/oauth/authorize', requestConfig);\n};\n\nexport const fetchToken = async (code: string): Promise<FetchTokenResponse> => {\n  const requestConfig = {\n    params: {\n      client_id: configs.clientId,\n      client_secret: configs.clientSecret,\n      redirect_uri: 'http://localhost:3000/auth',\n      code,\n      grant_type: 'authorization_code'\n    }\n  };\n\n  const request = axios.create(requestConfig);\n\n  const response = await request.post('https://unsplash.com/oauth/token');\n  return response.data;\n};\n","import { Dispatch } from 'redux';\nimport { fetchToken, FetchTokenResponse } from '../../services/auth';\nimport { AUTH_ACTION_TYPES, AuthAction } from './types';\n\nconst dispatchSetToken = (payload: FetchTokenResponse): AuthAction => (\n  {\n    type: AUTH_ACTION_TYPES.SET_TOKEN,\n    payload\n  }\n);\n\nexport const setToken = (code: string): any => async (dispatch: Dispatch<AuthAction>) => {\n  const responseData = await fetchToken(code);\n\n  dispatch(dispatchSetToken(responseData));\n};\n","export {default} from './reducer';\nexport * from './reducer';\nexport * from './actions';\n","import { combineReducers, Reducer } from 'redux';\nimport images from './images';\nimport auth from './auth';\nimport { AppState } from './types';\n\nconst reducer: Reducer<AppState> = combineReducers<AppState>({\n  images,\n  auth\n});\n\nexport default reducer;\nexport * from './types';\n","import React, { InputHTMLAttributes } from 'react';\n\nimport './Field.scss';\n\nexport enum InputTypes {\n    TEXT = 'text',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    PHONE = 'phone'\n}\n\ninterface IProps extends InputHTMLAttributes<HTMLInputElement> {\n    type: InputTypes;\n}\n\nexport class Field extends React.PureComponent<IProps> {\n    render() {\n        const { type, ...restProps } = this.props;\n        console.log(restProps);\n        return <div className={'field'}>\n            <input\n                type={type}\n                {...restProps}\n                className={'field__native-input'}/>\n        </div>\n    }\n}\n","import React, { RefObject } from 'react';\n\nimport classnames from 'classnames';\n\nimport './GridItem.scss';\n\ninterface IGridItemProps {\n  id: string;\n  url: string;\n  description: string;\n  likes: number;\n  link?: string;\n  className?: string,\n}\n\n\nexport class GridItem extends React.PureComponent<IGridItemProps> {\n  public state = {\n    spans: 0\n  };\n\n  private imageRef: RefObject<HTMLImageElement> = React.createRef();\n\n  componentDidMount(): void {\n    this.imageRef.current!.addEventListener('load', this.setSpans);\n  }\n\n  componentWillUnmount(): void {\n    this.imageRef.current!.removeEventListener('load', this.setSpans);\n  }\n\n  render() {\n    const {url, className} = this.props;\n    const {spans} = this.state;\n\n    return <div className={classnames('grid-item', className)} style={{gridRowEnd: `span ${spans}`}}>\n      <img src={url} alt='' ref={this.imageRef}/>\n    </div>;\n  }\n\n  private setSpans = () => {\n    const imageHeight = this.imageRef.current!.clientHeight;\n    const rawHeight = 10;// Looking to Grid.scss\n    const spans = Math.ceil(imageHeight / rawHeight);\n    this.setState(state => ({...state, spans}));\n  }\n}\n\n","import React from 'react';\nimport { Image } from '../../types/imagesApi';\nimport { GridItem } from './GridItem';\nimport './Grid.scss';\n\ninterface Props {\n  images: Array<Image>;\n  isLoading: boolean;\n  title?: string\n}\n\nexport class Grid extends React.PureComponent<Props> {\n  render() {\n    const { images, isLoading, title } = this.props;\n    if (isLoading) {\n      return <h2>loading...</h2>\n    }\n    return <div className={'grid'}>\n      <h2>{title}</h2>\n      <div className='grid__content'>\n        {\n          images.map(item => {\n            const {description, urls, likes, id} = item;\n            return <GridItem\n              className={'grid__item'}\n              id={id}\n              description={description}\n              url={urls.small}\n              likes={likes}/>;\n          })\n        }\n      </div>\n    </div>;\n  }\n}\n","import { connect } from 'react-redux';\n\nimport { getImages, getIsLoading } from '../store/images';\nimport { AppState } from '../store';\nimport { Grid } from '../components/grid';\nimport { Image } from '../types/imagesApi';\n\nexport interface IGridOwnProps {}\n\nexport interface IGridStateProps {\n  images: Array<Image>;\n  isLoading: boolean;\n}\n\nexport interface IGridDispatchProps {}\n\ntype Props = IGridStateProps & IGridDispatchProps & IGridOwnProps\n\nconst mapStateToProps = (state: AppState): Props  => {\n  return {\n    images: getImages(state),\n    isLoading: getIsLoading(state),\n  };\n};\n\nconst GridContainer = connect<IGridStateProps, IGridDispatchProps, IGridOwnProps>(mapStateToProps as any)(Grid);\n\nexport { GridContainer as Grid };\n","import React, { SyntheticEvent } from 'react';\n\nimport { Field, InputTypes } from '../field';\nimport classnames from 'classnames';\n\nimport './SearchForm.scss';\n\ninterface IProps {\n    onSubmit: (value: string) => void;\n    className: string;\n}\n\ninterface IState {\n    value: string;\n}\n\nexport class SearchForm extends React.Component<IProps, IState>{\n    public state = {\n        value: ''\n    };\n\n    private onSubmit = (e: SyntheticEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.value);\n    };\n\n    private changeHandler = (e: SyntheticEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value;\n        this.setState(state => ({...state, value}));\n    };\n\n    render() {\n        const { value } = this.state;\n        const classNames = classnames('search-form', this.props.className);\n\n        return <form onSubmit={this.onSubmit} className={classNames}>\n            <Field\n                type={InputTypes.TEXT}\n                value={value}\n                placeholder={'Search'}\n                onChange={this.changeHandler} />\n        </form>;\n    }\n}\n","import Redux, { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { Nav } from '../components/nav/Nav';\nimport { getItems } from '../store/images';\nimport { ImagesAction } from '../store/images/types';\n\ninterface IDispatchProps {\n  onSearch: (value: string) => Dispatch<ImagesAction>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ImagesAction>) => {\n  return {\n    onSearch: (value: string) => dispatch(getItems({value, page: 1}))\n  }\n};\n\nconst NavContainer = connect<null, IDispatchProps, null>(null, mapDispatchToProps)(Nav);\n\nexport { NavContainer as Nav};\n","import { SearchForm } from '../searchForm';\nimport React, { ReactNode } from 'react';\n\nimport './Nav.scss';\n\ninterface IProps {\n  onSearch: (value: string) => void,\n}\n\nexport const Nav: React.FunctionComponent<IProps> = ({ onSearch, children }) => {\n  return <nav className={'page-nav'}>\n    <div className='page-nav__container'>\n      <SearchForm className={'page-nav__search-form'} onSubmit={onSearch}/>\n      <ul className={'page-nav__menu'}>\n        { children }\n      </ul>\n    </div>\n  </nav>\n};\n\n\n","import * as React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport configs from '../../configs';\n\nexport interface AuthProps extends RouteChildrenProps {\n  setToken(code: string): void;\n  isAuthenticated?: boolean;\n}\n\nexport class Auth extends React.PureComponent<AuthProps, any> {\n  componentDidMount(): void {\n    const { search } = this.props.location;\n    if (search.indexOf('code=') !== -1) {\n      const code = search.slice(search.indexOf('=') + 1);\n      this.props.setToken(code);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<AuthProps>, nextContext: any): void {\n    if (nextProps.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return <div>\n      <a href={`https://unsplash.com/oauth/authorize?client_id=${configs.clientId}&redirect_uri=${configs.redirectUri}&response_type=${configs.response_type}&scope=${configs.scope}`}>authorize</a>\n    </div>;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { AuthAction } from '../store/auth/types';\nimport { isAuthenticated, setToken } from '../store/auth';\nimport { Auth } from '../components/auth';\nimport { AppState } from '../store';\nimport { RouteChildrenProps } from 'react-router';\n\ninterface IDispatchProps {\n  setToken: (code: string) => Dispatch<AuthAction>;\n}\n\ninterface IStateProps {\n  isAuthenticated: boolean\n}\n\ninterface OwnProps extends RouteChildrenProps {}\n\nconst mapStateToProps = (state: AppState) => (\n  {\n    isAuthenticated: isAuthenticated(state)\n  }\n);\n\n\nconst mapDispatchToProps = (dispatch: Dispatch<AuthAction>) => (\n  {\n    setToken: (code: string) => dispatch(setToken(code))\n  }\n);\n\nconst AuthContainer = connect<IStateProps, IDispatchProps, OwnProps>(mapStateToProps as any, mapDispatchToProps)(Auth);\n\nexport { AuthContainer as Auth };\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\ninterface IProps {\n  path: string;\n  title: string;\n}\n\nexport const NavItem: React.FunctionComponent<IProps> = ({path, title}) => {\n  return  <li className={'page-nav__item'}>\n    <Link to={path}><span>{title}</span></Link>\n  </li>\n}\n","import * as React from 'react';\nimport { Form, Text } from 'informed';\n\ninterface IProps {\n  className?: string\n}\n\nexport class SignInForm extends React.Component<IProps> {\n  render() {\n    return <Form >\n      <Text field={'email'}/>\n      <Text field={'password'}/>\n      <button type={'submit'}>Submit</button>\n    </Form>\n  }\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { getItems } from '../store/images';\nimport { ImagesAction } from '../store/images/types';\nimport { SignIn } from '../components/signIn/SignIn';\n\ninterface IDispatchProps {\n  onSubmit: (value: string) => Dispatch<ImagesAction>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<ImagesAction>) => {\n  return {\n    onSubmit: (value: string) => dispatch(getItems({value, page: 1}))\n  }\n};\n\nconst SignInContainer = connect<null, IDispatchProps, null>(null, mapDispatchToProps)(SignIn);\n\nexport { SignInContainer as SignIn};\n","import * as React from 'react';\nimport { SignInForm } from '../signInForm/SignInForm';\n\ninterface IProps {\n  onSubmit: (v: string) => void\n}\n\nexport const SignIn: React.FunctionComponent<IProps> = () => {\n  return <div className={'sign-in'}>\n    <SignInForm className={'sign-in__form'}/>\n  </div>\n}\n","import { Auth, Grid } from './containers';\nimport React from 'react';\nimport { RouteChildrenProps } from 'react-router';\nimport { SignIn } from './containers/SignIn';\n\nexport const routes = [\n  {\n    title: 'Home',\n    path: '/',\n    exact: true,\n    props: {\n      title: 'Test'\n    },\n    Component: Grid\n  },\n  {\n    title: 'Auth',\n    path: '/auth',\n    props: {\n      title: 'Auth'\n    },\n    Component: (props: RouteChildrenProps) => {\n      return <Auth {...props}/>\n    }\n  },\n  {\n    title: 'Product',\n    path: '/products/:productId',\n    exact: true,\n    props: {\n      title: 'Test'\n    },\n    Component: (props: RouteChildrenProps<{productId: string}>) => {\n      console.log(props.match);\n      return <div>Product: {props.match!.params.productId}</div>\n    }\n  },\n  {\n    title: 'About',\n    path: '/about',\n    Component: () => <h1>Hello from about page</h1>\n  },\n  {\n    title: 'Sign In',\n    path: '/sign-in',\n    Component: () => <SignIn />\n  }\n];\n","import React from 'react';\n\nimport { Nav } from './containers';\nimport './App.scss';\nimport { Route } from 'react-router';\nimport { NavItem } from './components/nav';\nimport { routes } from './routes';\n\nexport class App extends React.Component<{}, {}> {\n   public render() {\n    return <div className={'page-container'}>\n      <Nav>\n        {\n          routes.map(({path, title}) => (\n            <NavItem path={path} title={title}/>\n          ))\n        }\n      </Nav>\n      {\n        routes.map(({path, exact, Component, props}) => (\n          <Route\n            path={path}\n            exact={exact}\n            render={(routeProps) => {\n              console.log(routeProps);\n              return <Component {...props} {...routeProps}/>;\n            }}\n          />\n        ))\n      }\n\n    </div>;\n  }\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store';\nimport { App } from './App';\n\nimport './index.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(reduxThunk),\n  composeEnhancers()\n));\n\nReactDOM.render(\n  <Provider store={ store }>\n    <Router>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}